#!/usr/bin/env node

require('dotenv').config();
const WebAppManager = require('./src/webAppManager');
const Web3Service = require('./src/web3Service');

async function testComponents() {
    console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...\n');
    
    // –¢–µ—Å—Ç Web3Service
    try {
        console.log('‚úÖ –¢–µ—Å—Ç Web3Service...');
        const web3Service = new Web3Service();
        console.log('   Web3Service –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ Web3Service:', error.message);
    }
    
    // –¢–µ—Å—Ç WebAppManager (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Tor)
    try {
        console.log('‚úÖ –¢–µ—Å—Ç WebAppManager...');
        const webAppManager = new WebAppManager();
        
        // –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ viewport
        const viewport = webAppManager.getViewportSettings('mobile');
        console.log('   Mobile viewport:', viewport);
        
        const desktopViewport = webAppManager.getViewportSettings('desktop');
        console.log('   Desktop viewport:', desktopViewport);
        
        // –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ URL
        const onionUrl = 'https://duckduckgogg42ts72.onion';
        const isAllowed = webAppManager.isAllowedUrl(onionUrl);
        console.log('   .onion URL —Ä–∞–∑—Ä–µ—à–µ–Ω:', isAllowed);
        
        const blockedUrl = 'https://google.com';
        const isBlocked = !webAppManager.isAllowedUrl(blockedUrl);
        console.log('   google.com –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:', isBlocked);
        
        console.log('   WebAppManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ WebAppManager:', error.message);
    }
    
    // –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã API —Ä–æ—É—Ç–æ–≤
    try {
        console.log('‚úÖ –¢–µ—Å—Ç API —Ä–æ—É—Ç–æ–≤...');
        const express = require('express');
        const app = express();
        
        // –ë–∞–∑–æ–≤—ã–µ middleware
        app.use(express.json());
        
        // –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–æ—É—Ç—ã
        app.get('/api/status', (req, res) => {
            res.json({
                telegram: false, // –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–æ–≤
                web3: true,
                webapp: true,
                activeSessions: 0,
                uptime: process.uptime(),
                timestamp: new Date().toISOString()
            });
        });
        
        app.get('/webapp', (req, res) => {
            res.send('<h1>Telegram Web App Test</h1>');
        });
        
        console.log('   API —Ä–æ—É—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ API —Ä–æ—É—Ç–æ–≤:', error.message);
    }
    
    // –¢–µ—Å—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    try {
        console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
        
        const express = require('express');
        console.log('   Express: OK');
        
        const socketIo = require('socket.io');
        console.log('   Socket.IO: OK');
        
        const cors = require('cors');
        console.log('   CORS: OK');
        
        // Puppeteer (–º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ Chrome)
        try {
            const puppeteer = require('puppeteer');
            console.log('   Puppeteer: OK');
        } catch (err) {
            console.log('   Puppeteer: SKIP (Chrome –Ω–µ –Ω–∞–π–¥–µ–Ω)');
        }
        
        const { ethers } = require('ethers');
        console.log('   Ethers: OK');
        
        const Web3 = require('web3');
        console.log('   Web3: OK');
        
        console.log('   –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:', error.message);
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìã –û—Ç—á–µ—Ç:');
    console.log('   ‚úÖ Web3Service - –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    console.log('   ‚úÖ WebAppManager - –±–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç–∞–µ—Ç');  
    console.log('   ‚úÖ API —Ä–æ—É—Ç—ã - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞');
    console.log('   ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã');
    console.log('   ‚ö†Ô∏è  Telegram Bot - —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω');
    console.log('   ‚ö†Ô∏è  Puppeteer - —Ç—Ä–µ–±—É–µ—Ç Chrome/Chromium');
    console.log('   ‚ö†Ô∏è  Tor Proxy - —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π Tor');
    
    console.log('\nüîß –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:');
    console.log('   1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Tor: sudo apt install tor');
    console.log('   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Chromium: sudo apt install chromium-browser');  
    console.log('   3. –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –æ—Ç @BotFather');
    console.log('   4. –û–±–Ω–æ–≤–∏—Ç—å TELEGRAM_BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ');
}

testComponents().catch(console.error);
